@import "@src/theme/builtIn.scss";

.h {
  display: none;
}

//Sizes
$minWidth: 14rem;
$minWidthTouch: $minWidth * 1.6;
$height: 1.8rem;
$touchHeight: 3rem;
$scrollBarWidth: 0.5rem;

//Padding
$padding: 0.2rem;

//Font
$fontSize: 1rem;
$touchFontSize: 1.6rem;

//Colors
$backColor: var(--cifbc);
$borderColor: var(--cifbrc);
$focusColor: var(--ciffc);
$hoverColor: var(--cifhc);
$textColor: var(--ciftc);
$selectedTextColor: var(--cifsc);
$unselectedTextColor: var(--cifsc);

//Basic Colors
$blackColor: var(--cifcb);
$blackColorText: var(--cifctb);
$greenColor: var(--cifcg);
$redColor: var(--cifcr);
$blueColor: var(--cifcb);
$yellowColor: var(--cifcy);

//Border
$cornerRadius: 0.4rem;
$borderThickness: 0.0625rem;
$border: $borderThickness solid $borderColor;

//Shadows
$shadowOut: 0 0.125rem 0.1875rem 0 $borderColor;
$shadowOutActive: 0 0 0.1875rem 0 $borderColor;
$shadowIn: inset 0 0.125rem 0.1875rem 0 $borderColor;
$focusOut: 0 0 0 0.2rem $focusColor;
$focusIn: inset 0 0 0 0.2rem $focusColor;
$shadowOutFocusOut: $shadowOut, $focusOut;
$shadowOutActiveFocusOut: $shadowOutActive, $focusOut;
$shadowInFocusOut: $focusOut, $shadowIn;
$shadowOutFocusIn: $focusIn, $shadowOut;
$shadowInFocusIn: $focusIn, $shadowIn;

//Transitions
$colorTransitionType: ease-in-out;
$colorTransitionTime: 0.4s;
$sizeTransitionType: ease-in-out;
$sizeTransitionTime: 0.2s;

//Mixins
@mixin base {
  display: flex;
  flex-direction: column;
  min-width: $minWidth;
  position: relative;
  @include fontRoboto;

  .touch & {
    min-width: $minWidthTouch;
  }

  > span {
    @include label;
  }
}

//Mixins
@mixin label {
  display: block;
  padding: 0rem 0.1rem 0.1rem 0.4rem;
  color: $textColor;

  &:empty {
    display: none;
  }

  .graphics-all & {
    transition: color ease-in-out 0.2s;
  }

  .touch & {
    font-size: 1.3rem;
  }
}

$valueFontSize: 1rem;
$touchValueFontSize: $valueFontSize * 1.4;
$unitFontSize: 0.75rem;
$touchUnitFontSize: $unitFontSize * 1.4;
$valueUnitFontHeight: max($valueFontSize, $unitFontSize) + 0.4rem;
$touchValueUnitFontHeight: max($touchValueFontSize, $touchUnitFontSize) + 0.4rem;

@mixin valueFont {
  color: $textColor;
  font-size: $valueFontSize;
  line-height: $valueUnitFontHeight;

  .touch & {
    font-size: $touchValueFontSize;
    line-height: $touchValueUnitFontHeight;
  }
}

@mixin unitFont {
  color: $textColor;
  font-size: $unitFontSize;
  line-height: $valueUnitFontHeight;

  .touch & {
    font-size: $touchUnitFontSize;
    line-height: $touchValueUnitFontHeight;
  }
}

$unitWidth: $unitFontSize * 5.6;
$touchUnitWidth: $touchUnitFontSize * 5.6;

@mixin unitContainer {
  @include unitFont;
  display: block;
  max-width: $unitWidth;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;

  &:empty {
    width: 0px !important;
  }

  .touch & {
    max-width: $touchUnitWidth;
  }
}

@mixin colorAttributes {
  &[color="black"] {
    background-color: $blackColor;

    > span {
      color: $blackColorText;
    }

    > svg {
      fill: $blackColorText;
    }
  }

  &[color="green"] {
    background-color: $greenColor;
  }

  &[color="red"] {
    background-color: $redColor;
  }

  &[color="blue"] {
    background-color: $blueColor;
  }

  &[color="yellow"] {
    background-color: $yellowColor;
  }
}

//Mixins
@mixin number-base {
  div > button {
    position: absolute;
    inset: 0;
    visibility: hidden;
  }
}

@mixin limit-legend {
  color: $textColor;
  font-size: 0.7rem;
  pointer-events: none;

  .touch & {
    font-size: 0.7rem;
  }
}

@mixin stepperButton {
  background-color: $backColor;
  border-radius: $cornerRadius;
  border: $border;
  box-shadow: $shadowOut;
  box-sizing: border-box;
  fill: $textColor;
  position: relative;
  height: $height;
  width: $height;
  top: -$borderThickness;
  padding: 0.14rem;
  flex-shrink: 0;
  pointer-events: all;
  cursor: auto;

  &.active {
    box-shadow: $shadowOutActive;
  }

  .touch & {
    height: $touchHeight;
    width: $touchHeight;
    padding: 0.2rem;
  }

  @media (pointer: fine) {
    &:hover {
      background-color: $hoverColor;
    }
  }

  > svg {
    width: 100%;
    height: 100%;
  }
}
