@import "../selectorBase.scss";

chocolatelibui-form-togglebutton {
    @include base;

    >div {
        overflow-x: auto;
        -webkit-user-select: none;
        user-select: none;
        display: grid;
        grid-template-rows: auto auto;
        grid-auto-columns: 1fr;

        .touch & {
            font-size: $touchFontSize;
        }

        >div {
            color: $unselectedTextColor;
            fill: $unselectedTextColor;
            display: flex;
            justify-content: center;
            text-align: center;
            box-sizing: border-box;

            &.selected {
                color: $selectedTextColor;
                fill: $selectedTextColor;
            }

            &:nth-child(odd) {
                position: relative;
                grid-row: 1;
                align-items: center;
                background-color: $backColor;
                padding: $padding;
                border-block: $borderThickness solid $borderColor;
                outline: none;
                min-height: $height;

                &.selected {
                    background-color: $hoverColor;
                }

                .touch & {
                    min-height: $touchHeight - $borderThickness * 2;
                }

                &:focus-visible {
                    z-index: 1;

                    &::after {
                        box-shadow: $focusOut;
                    }
                }

                &::after {
                    content: '';
                    position: absolute;
                    box-shadow: $shadowOut;
                    inset: -$borderThickness;
                    z-index: -1;
                }

                @media(pointer: fine) {
                    &:hover {
                        background-color: $hoverColor;
                    }
                }

                >svg {
                    height: $height - $padding * 2 - $borderThickness * 2;
                    width: auto;

                    .touch & {
                        height: $touchHeight - $padding * 2 - $borderThickness * 2;
                    }
                }
            }

            &:nth-child(even) {
                grid-row: 2;
                padding: $padding;
                padding-bottom: 0;

                &:empty {
                    padding: 0rem;
                }
            }

            &:first-child {
                border-radius: $cornerRadius 0 0 $cornerRadius;
                border-left: $borderThickness solid $borderColor;

                &::after {
                    border-radius: $cornerRadius 0 0 $cornerRadius;
                }
            }

            &:nth-last-child(2) {
                border-radius: 0 $cornerRadius $cornerRadius 0;
                border-right: $borderThickness solid $borderColor;

                &::after {
                    border-radius: 0 $cornerRadius $cornerRadius 0;
                }
            }
        }
    }
}