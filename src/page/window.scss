@import "../theme/builtIn.scss";

$closerHoverColor: var(--ciwchc);

$titleHeight: 1.6rem;
$titleHeightTouch: 2rem;
$sizerBorder: 0.6rem;
$sizerBorderTouch: 1.2rem;
$sizerPillThickness: 0.2rem;
$sizerPillThicknessTouch: 0.3rem;
$sizerPillSize: 2rem;
$sizerPillSizeTouch: 3rem;

chui-window {
  position: absolute;
  display: flex;
  flex-direction: column;
  pointer-events: auto;
  -webkit-user-select: none;
  user-select: none;
  z-index: 1;
  outline: none;
  border-radius: $chuiBorderRadius;
  box-sizing: border-box;
  min-height: min-content;

  &[hide] {
    display: none;
  }

  &:not(.visible) {
    box-shadow: 0px 0px 6px 1px $chuiColorBorder;
  }
  &:not(.visible):focus-within {
    box-shadow: 0px 0px 6px 2.5px $chuiColorBorder;
  }

  //    _______ _ _   _      _
  //   |__   __(_) | | |    | |
  //      | |   _| |_| | ___| |__   __ _ _ __
  //      | |  | | __| |/ _ \ '_ \ / _` | '__|
  //      | |  | | |_| |  __/ |_) | (_| | |
  //      |_|  |_|\__|_|\___|_.__/ \__,_|_|
  &[moveable] > div:first-child {
    cursor: grab;
  }
  &[empty] > div:first-child {
    flex-grow: 1;
    border-radius: $chuiBorderRadius;
  }
  > div:first-child {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    position: relative;
    background-color: $chuiColorLayer4;
    overflow: hidden;
    border-radius: $chuiBorderRadius $chuiBorderRadius 0 0;
    &:active {
      cursor: grabbing;
    }
    &[hidden] {
      display: none;
    }
    > div:first-child {
      display: flex;
      align-items: center;
      justify-content: center;
      height: $titleHeight;
      .touch & {
        height: $titleHeightTouch;
      }
      > * {
        border: 0.2rem solid transparent;
        height: 100%;
        width: auto;
        box-sizing: border-box;
      }
    }
    > div:nth-child(2) {
      flex-grow: 1;
      flex-basis: 1px;
      overflow-wrap: break-word;
      word-break: normal;
      display: flex;
      align-items: center;
      padding: 0.2rem 0.4rem;
      line-height: 0.9rem;
    }
    > div:last-child {
      cursor: auto;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      .touch & {
        flex-basis: $titleHeightTouch;
      }
      &:hover {
        background-color: $closerHoverColor;
      }
      > * {
        border: 0.2rem solid transparent;
        height: $titleHeight;
        width: auto;
        box-sizing: border-box;
      }
    }
  }
  //     _____            _             _
  //    / ____|          | |           | |
  //   | |     ___  _ __ | |_ ___ _ __ | |_
  //   | |    / _ \| '_ \| __/ _ \ '_ \| __|
  //   | |___| (_) | | | | ||  __/ | | | |_
  //    \_____\___/|_| |_|\__\___|_| |_|\__|
  > div:nth-child(2) {
    flex-grow: 1;
    overflow: auto;
    background-color: $chuiColorLayer1;
    border-radius: 0 0 $chuiBorderRadius $chuiBorderRadius;
    -webkit-user-select: auto;
    user-select: auto;
  }
  div:first-child[hidden] + div:nth-child(2) {
    border-radius: $chuiBorderRadius;
  }
  > div:first-child + div:nth-child(2):empty {
    display: none;
  }
  //     _____ _
  //    / ____(_)
  //   | (___  _ _______ _ __
  //    \___ \| |_  / _ \ '__|
  //    ____) | |/ /  __/ |
  //   |_____/|_/___\___|_|
  &:focus-within > div.visible:last-child {
    box-shadow: 0px 0px 6px 2.5px $chuiColorBorder;
  }

  > div:last-child {
    position: absolute;
    inset: 0;
    z-index: -1;
    outline: none;

    &.top {
      top: -$sizerBorder;
      .touch & {
        top: -$sizerBorderTouch;
      }
    }
    &.bottom {
      bottom: -$sizerBorder;
      .touch & {
        bottom: -$sizerBorderTouch;
      }
    }
    &.right {
      right: -$sizerBorder;
      .touch & {
        right: -$sizerBorderTouch;
      }
    }
    &.left {
      left: -$sizerBorder;
      .touch & {
        left: -$sizerBorderTouch;
      }
    }

    &.visible {
      background-color: $chuiColorLayer4;
      border-radius: $chuiBorderRadius * 1.2;
      box-shadow: 0px 0px 6px 1px $chuiColorBorder;

      > *::after {
        content: "";
        display: block;
        background-color: $chuiColorLayer1Txt;
        width: $sizerPillThickness;
        height: $sizerPillThickness;
        border-radius: 1rem;
        .touch & {
          width: $sizerPillThicknessTouch;
          height: $sizerPillThicknessTouch;
        }
      }
      > .top::after,
      > .bottom::after {
        width: $sizerPillSize;
        .touch & {
          width: $sizerPillSizeTouch;
        }
      }
      > .left::after,
      > .right::after {
        height: $sizerPillSize;
        .touch & {
          height: $sizerPillSizeTouch;
        }
      }
      > .top-right::after,
      > .top-left::after,
      > .bottom-right::after,
      > .bottom-left::after {
        position: absolute;
        width: 0.35rem;
        height: 0.35rem;
        .touch & {
          width: 0.5rem;
          height: 0.5rem;
        }
      }
      > .top-right::after {
        top: 20%;
        right: 20%;
      }
      > .top-left::after {
        top: 20%;
        left: 20%;
      }
      > .bottom-right::after {
        bottom: 20%;
        right: 20%;
      }
      > .bottom-left::after {
        bottom: 20%;
        left: 20%;
      }
    }

    > * {
      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }

    > .top,
    > .bottom {
      height: $sizerBorder;
      .touch & {
        height: $sizerBorderTouch;
      }
    }
    > .right,
    > .left {
      width: $sizerBorder;
      .touch & {
        width: $sizerBorderTouch;
      }
    }
    > .top {
      bottom: unset;
      cursor: n-resize;
    }
    > .bottom {
      top: unset;
      cursor: s-resize;
    }
    > .right {
      left: unset;
      cursor: e-resize;
    }
    > .left {
      right: unset;
      cursor: w-resize;
    }
    > .top-left,
    > .top-right,
    > .bottom-left,
    > .bottom-right {
      width: $sizerBorder * 2;
      height: $sizerBorder * 2;
      .touch & {
        width: $sizerBorderTouch * 2;
        height: $sizerBorderTouch * 2;
      }
    }
    > .top-left {
      bottom: unset;
      right: unset;
      cursor: nw-resize;
    }
    > .top-right {
      bottom: unset;
      left: unset;
      cursor: ne-resize;
    }
    > .bottom-left {
      top: unset;
      right: unset;
      cursor: sw-resize;
    }
    > .bottom-right {
      top: unset;
      left: unset;
      cursor: se-resize;
    }
  }
}

chui-windowcontainer {
  pointer-events: none;

  > div {
    position: fixed;
    inset: 0;
  }
}
